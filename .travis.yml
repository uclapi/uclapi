language: python
branches:
  only:
  - master
python:
- '3.6'
dist: bionic
sudo: required
cache: pip
services:
- redis-server
install:
- "(sed '/cx.*/d' ./backend/uclapi/requirements.txt | sed -e 's/^\\-e //') | xargs
  -n 1 pip3 install"
- pip3 install codecov
- sudo apt-get update
addons:
  postgresql: '9.6'
jobs:
  include:
  - stage: test
    before_script:
    - sudo apt-get install libaio1 unzip wget build-essential libpq-dev libpq5
    - sudo wget https://s3.eu-west-2.amazonaws.com/uclapi-static/instantclient-basic-linux.x64-12.2.0.1.0.zip
    - sudo wget https://s3.eu-west-2.amazonaws.com/uclapi-static/instantclient-sdk-linux.x64-12.2.0.1.0.zip
    - sudo unzip instantclient-basic-linux.x64-12.2.0.1.0.zip
    - sudo unzip instantclient-sdk-linux.x64-12.2.0.1.0.zip
    - cd instantclient_12_2
    - sudo ln -s libclntsh.so.12.1 libclntsh.so
    - sudo ln -s libocci.so.12.1 libocci.so
    - export ORACLE_HOME=$(pwd)
    - export DYLD_LIBRARY_PATH=DYLD_LIBRARY_PATH:$ORACLE_HOME
    - export LD_LIBRARY_PATH=LD_LIBRARY_PATH:$ORACLE_HOME
    - cd ./../backend/uclapi
    - pip3 install $(cat requirements.txt | grep "cx-Oracle")
    - cp webpack-stats.sample.json ./static/webpack-stats.json
    script:
    - python ./manage.py migrate
    - coverage run --source='.' --omit='*migrations*' manage.py test --testrunner
      'uclapi.custom_test_runner.NoDbTestRunner' --settings=uclapi.settings_mocked
    after_success:
    - codecov
  - stage: deploy
    if: branch = master AND (NOT type IN (pull_request))
    env:
    - AWS_S3_STATICS=True
    - AWS_S3_STATICS_CREDENTIALS_ENABLED=False
    - AWS_S3_BUCKET_NAME=uclapi-static
    - AWS_S3_BUCKET_PATH=static/
    - AWS_S3_REGION=eu-west-2
    before_script:
    - sudo apt-get install libaio1 unzip wget build-essential libpq-dev libpq5 npm nodejs
    - sudo wget https://s3.eu-west-2.amazonaws.com/uclapi-static/instantclient-basic-linux.x64-12.2.0.1.0.zip
    - sudo wget https://s3.eu-west-2.amazonaws.com/uclapi-static/instantclient-sdk-linux.x64-12.2.0.1.0.zip
    - sudo unzip instantclient-basic-linux.x64-12.2.0.1.0.zip
    - sudo unzip instantclient-sdk-linux.x64-12.2.0.1.0.zip
    - cd instantclient_12_2
    - sudo ln -s libclntsh.so.12.1 libclntsh.so
    - sudo ln -s libocci.so.12.1 libocci.so
    - export ORACLE_HOME=$(pwd)
    - export DYLD_LIBRARY_PATH=DYLD_LIBRARY_PATH:$ORACLE_HOME
    - export LD_LIBRARY_PATH=LD_LIBRARY_PATH:$ORACLE_HOME
    - cd ./../backend/uclapi
    - pip3 install $(cat requirements.txt | grep "cx-Oracle")
    - pip3 install awscli
    - cp webpack-stats.sample.json ./static/webpack-stats.json
    - cd ../../frontend/
    - nvm use node
    - npm config set strict-ssl false
    - npm install
    - npm run build
    script:
    - cd ../backend/uclapi
    - ./manage.py collectstatic --noinput
    - eval "$(ssh-agent -s)"
    - cd ../..
    - chmod 600 ./uclapi-staging-1.pem
    - chmod 600 ./uclapi-staging-2-docker.pem
    - echo -e "Host $STAGING_BASTION\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - echo -e "Host $STAGING_CRON\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - ssh-add ./uclapi-staging-1.pem
    - ssh-add ./uclapi-staging-2-docker.pem
    - ssh -i ./uclapi-staging-1.pem ubuntu@$STAGING_BASTION -t "cd ~; ./deploy.sh;"
    - ssh -i ./uclapi-staging-1.pem -J ubuntu@$STAGING_BASTION ubuntu@$STAGING_CRON -t "cd ~; ./deploy.sh;"
before_install:
  - openssl aes-256-cbc -K $encrypted_7e23b3ba1922_key -iv $encrypted_7e23b3ba1922_iv -in keys.tar.enc -out keys.tar -d
  - tar xvf keys.tar
