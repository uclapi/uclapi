name: CD

on:
  pull_request:
    types: [closed]

jobs:
  deploy-staging:
    name: deploy to staging
    runs-on: ubuntu-latest
    if: github.event.pull_request.base.ref == 'master' && github.event.pull_request.merged == true
    environment: Staging
    steps:
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: setup nodejs
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: checkout code
        uses: actions/checkout@v2

      - name: setup oracle
        run: ./.github/workflows/scripts/setup-oracle.sh
      
      - name: setup python dependencies
        run: |
          python -m pip install --upgrade pip && \
          cd ./backend/uclapi && \
          pip install -r requirements.txt && \
          pip install $(cat requirements.txt | grep "cx-Oracle")

      - name: setup frontend dependencies
        run: |
          cp ./backend/uclapi/webpack-stats.sample.json ./backend/uclapi/static/webpack-stats.json && \
          cd ./frontend/ && \
          npm ci
      
      - name: build frontend
        run: |
          cd ./frontend/ && \
          npm run build

      - name: wait on other checks
        uses: lewagon/wait-on-check-action@v0.2
        with:
          ref: ${{ github.ref }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: unencrypt secrets
        env:
          encrypted_7e23b3ba1922_iv: ${{ secrets.encrypted_7e23b3ba1922_iv }}
          encrypted_7e23b3ba1922_key: ${{ secrets.encrypted_7e23b3ba1922_key }}
        run: |
          openssl aes-256-cbc -K $encrypted_7e23b3ba1922_key -iv $encrypted_7e23b3ba1922_iv -in keys.tar.enc -out keys.tar -d && \
          tar xvf keys.tar

      - name: deploy static assets
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_S3_BUCKET_NAME: uclapi-static-staging
          AWS_S3_BUCKET_PATH: static/
          AWS_S3_REGION: eu-west-2
          AWS_S3_STATICS_CREDENTIALS_ENABLED: False
          AWS_S3_STATICS: True
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          FORBIDDEN_CALLBACK_URLS: ${{ secrets.FORBIDDEN_CALLBACK_URLS }}
          OCCUPEYE_BASE_URL: ${{ secrets.OCCUPEYE_BASE_URL }}
          OCCUPEYE_DEPLOYMENT_ID: ${{ secrets.OCCUPEYE_DEPLOYMENT_ID }}
          OCCUPEYE_DEPLOYMENT_NAME: ${{ secrets.OCCUPEYE_DEPLOYMENT_NAME }}
          OCCUPEYE_PASSWORD: ${{ secrets.OCCUPEYE_PASSWORD }}
          OCCUPEYE_THREAD_LIMIT: ${{ secrets.OCCUPEYE_THREAD_LIMIT }}
          OCCUPEYE_USERNAME: ${{ secrets.OCCUPEYE_USERNAME }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          SHIB_TEST_USER: ${{ secrets.SHIB_TEST_USER }}
          STAGING_BASTION: ${{ secrets.STAGING_BASTION }}
          STAGING_CRON: ${{ secrets.STAGING_CRON }}
          UCLAPI_PRODUCTION: False
          UCLAPI_RUNNING_ON_AWS_ELB: False
          WHITELISTED_CALLBACK_URLS: ${{ secrets.WHITELISTED_CALLBACK_URLS }}
        run: |
          cd ./backend/uclapi && \
          ./manage.py collectstatic --noinput && \
          eval "$(ssh-agent -s)" && \
          cd ../.. && \
          chmod 600 ./uclapi-staging-1.pem && \
          chmod 600 ./uclapi-staging-2-docker.pem && \
          echo -e "Host $STAGING_BASTION\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config && \
          echo -e "Host $STAGING_CRON\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config && \
          ssh-add ./uclapi-staging-1.pem && \
          ssh-add ./uclapi-staging-2-docker.pem && \
          ssh -i ./uclapi-staging-1.pem ubuntu@$STAGING_BASTION -t "cd ~; ./deploy.sh;" && \
          ssh -i ./uclapi-staging-1.pem -J ubuntu@$STAGING_BASTION ubuntu@$STAGING_CRON -t "cd ~; ./deploy.sh;"
